---
import { type CollectionEntry, getCollection } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';
import PostContent from '../../components/molecules/PostContent'
import AuthorBio from '../../components/molecules/AuthorBio'

export async function getStaticPaths() {
	const posts = (await getCollection('blog'));
	const isProd = import.meta.env.PROD;

	return posts.reduce((filteredPosts, post) => {
		const {isDraft} = post.data;

		if (isProd && isDraft !== true) {
			// Apply transformation (map) and add to accumulator
			filteredPosts.push({
				params: { slug: post.slug },
				props: post,
			});
		}

		return filteredPosts;

	}, []);
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content } = await post.render();
---

<BlogPost {...post.data} slug={post.slug}>
	<PostContent>
		<Content />
		<AuthorBio />
	</PostContent>
</BlogPost>
